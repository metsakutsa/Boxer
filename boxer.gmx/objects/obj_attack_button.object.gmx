<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
image_speed = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control button graphics upon mouse press

if global.state != states.player {
    image_index = 1;
}

else if (position_meeting(mouse_x,mouse_y,self) and mouse_check_button(mb_left)){
    image_index = 1;
}

else {
    image_index = 0;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cast effect and go to enemy turn
if global.state == states.player{
    if instance_exists(global.selected) {
        script_execute(global.selected.effect);
    
        ds_list_delete(obj_deck.hand, ds_list_find_index(obj_deck.hand, global.selected));
        global.selected = noone;
        global.state = states.enemy;
    }
}
/*
if(ds_list_size(obj_queue.queue) == 2){
    audio_play_sound(spell_attack, 3, false);
    image_index = 0;
    with(obj_hand){
        selected_count = 0;
    }
    
    
    c1 = ds_list_find_value(obj_queue.queue, 0).color;
    c2 = ds_list_find_value(obj_queue.queue, 1).color;
    op = ds_list_find_value(obj_queue.operators, 0).image_index;
    en = obj_enemy.color;
    
    cardcolors = ds_list_create();
    ds_list_add(cardcolors, c1);
    ds_list_add(cardcolors, c2);
    
    ds_list_sort(cardcolors, true);
    
    c1 = ds_list_find_value(cardcolors, 0);
    c2 = ds_list_find_value(cardcolors, 1);
    en1 = ds_list_find_value(en, 0);
    en2 = ds_list_find_value(en, 1);   
    
  //  show_debug_message(string(c1)+ " "+string(c2));
//    show_debug_message(string(en1)+ " "+string(en2));    
    //0 = AND; 1 = OR
    if (op == 0){
        if c1 == en1 and c2 == en2 {
            scr_new_wave();
            with(obj_card){instance_destroy();}
            with(obj_operator){instance_destroy();}
            scr_draw_hand();
        }
        
    }
    
    else{
        if (c1 == en1 or c1 == en2 or c2 == en1 or c2 == en2) {
            scr_new_wave();
            with(obj_card){instance_destroy();}
            with(obj_operator){instance_destroy();}
            scr_draw_hand();
        }
    }
    
    ds_list_clear(obj_queue.queue);
    ds_list_clear(obj_queue.operators);
    ds_list_clear(obj_hand.hand);
    
}

//remove hp after attack
obj_player_view.hp_current -= 10;
audio_play_sound(asset_get_index("player_hit" + string(irandom_range(1, 6))), 4, false);
audio_play_sound(taking_damage_sfx, 3, false);

//reset attack clock
obj_timer.myTime = 10;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
